@using System.Text.RegularExpressions;
<div class="top-row ps-3 navbar navbar-dark">
    <div class="container-fluid">
        <a class="navbar-brand" href="">Programming</a>
        <button title="Navigation menu" class="navbar-toggler" @onclick="ToggleNavMenu">
            <span class="navbar-toggler-icon"></span>
        </button>
    </div>
</div>



<div class="@NavMenuCssClass nav-scrollable" @onclick="ToggleNavMenu">
    <nav class="flex-column">
    @foreach (var item in dirs)
    {
        <div class="nav-item px-3">
                <NavLink class="nav-link" href=@Path.GetFileNameWithoutExtension(item)>
                    <span class="oi oi-list-rich" aria-hidden="true"></span> @string.Join(" ", Regex.Split(Path.GetFileNameWithoutExtension(item), @"(?<!^)(?=[A-Z])"))
            </NavLink>
        </div>
    }

        <div class="nav-item px-3">
            <NavLink class="nav-link" href="" @onclick="()=>expandSubMenu=!expandSubMenu">
                <span class="oi oi-list-rich" aria-hidden="true"></span> parent
            </NavLink>
            @if(expandSubMenu)
            {
                <NavLink class="navbar-expand" href="">
                    <span class="oi oi-file" aria-hidden="true"></span> sub1
                </NavLink>
                <NavLink class="navbar-expand" href="">
                    <span class="oi oi-bar-chart" aria-hidden="true"></span> sub1
                </NavLink>
            }
        </div>
    </nav>
</div>

@code {
    private string newDir => Path.GetFullPath(Path.Combine(Directory.GetCurrentDirectory(), @"..\Programming\Pages\"));
    private  string[] dirs => Directory.GetFiles(newDir, "*.razor", SearchOption.AllDirectories);


    private bool collapseNavMenu = true;
    private bool expandSubMenu;

    private string? NavMenuCssClass => collapseNavMenu ? "collapse" : null;

    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }
}
